//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
// 
#pragma warning disable 1591

namespace TrackLimitHelper.UserSecuritySvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UserSecuritySoap", Namespace="http://tempuri.org/")]
    public partial class UserSecurity : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanSeePlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback userLoginToDGSOperationCompleted;
        
        private System.Threading.SendOrPostCallback userHasRighttoFormOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserSecurity() {
            this.Url = global::TrackLimitHelper.Properties.Settings.Default.TrackLimitHelper_UserSecuritySvc_UserSecurity;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event CanSeePlayerCompletedEventHandler CanSeePlayerCompleted;
        
        /// <remarks/>
        public event userLoginToDGSCompletedEventHandler userLoginToDGSCompleted;
        
        /// <remarks/>
        public event userHasRighttoFormCompletedEventHandler userHasRighttoFormCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UserLogin(System.Xml.XmlNode parameters) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        parameters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(System.Xml.XmlNode parameters) {
            this.UserLoginAsync(parameters, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(System.Xml.XmlNode parameters, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        parameters}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CanSeePlayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CanSeePlayer(System.Xml.XmlNode parameters) {
            object[] results = this.Invoke("CanSeePlayer", new object[] {
                        parameters});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CanSeePlayerAsync(System.Xml.XmlNode parameters) {
            this.CanSeePlayerAsync(parameters, null);
        }
        
        /// <remarks/>
        public void CanSeePlayerAsync(System.Xml.XmlNode parameters, object userState) {
            if ((this.CanSeePlayerOperationCompleted == null)) {
                this.CanSeePlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanSeePlayerOperationCompleted);
            }
            this.InvokeAsync("CanSeePlayer", new object[] {
                        parameters}, this.CanSeePlayerOperationCompleted, userState);
        }
        
        private void OnCanSeePlayerOperationCompleted(object arg) {
            if ((this.CanSeePlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanSeePlayerCompleted(this, new CanSeePlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/userLoginToDGS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode userLoginToDGS(string user, string password) {
            object[] results = this.Invoke("userLoginToDGS", new object[] {
                        user,
                        password});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void userLoginToDGSAsync(string user, string password) {
            this.userLoginToDGSAsync(user, password, null);
        }
        
        /// <remarks/>
        public void userLoginToDGSAsync(string user, string password, object userState) {
            if ((this.userLoginToDGSOperationCompleted == null)) {
                this.userLoginToDGSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserLoginToDGSOperationCompleted);
            }
            this.InvokeAsync("userLoginToDGS", new object[] {
                        user,
                        password}, this.userLoginToDGSOperationCompleted, userState);
        }
        
        private void OnuserLoginToDGSOperationCompleted(object arg) {
            if ((this.userLoginToDGSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userLoginToDGSCompleted(this, new userLoginToDGSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/userHasRighttoForm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool userHasRighttoForm(string user, string form, string right) {
            object[] results = this.Invoke("userHasRighttoForm", new object[] {
                        user,
                        form,
                        right});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void userHasRighttoFormAsync(string user, string form, string right) {
            this.userHasRighttoFormAsync(user, form, right, null);
        }
        
        /// <remarks/>
        public void userHasRighttoFormAsync(string user, string form, string right, object userState) {
            if ((this.userHasRighttoFormOperationCompleted == null)) {
                this.userHasRighttoFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserHasRighttoFormOperationCompleted);
            }
            this.InvokeAsync("userHasRighttoForm", new object[] {
                        user,
                        form,
                        right}, this.userHasRighttoFormOperationCompleted, userState);
        }
        
        private void OnuserHasRighttoFormOperationCompleted(object arg) {
            if ((this.userHasRighttoFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userHasRighttoFormCompleted(this, new userHasRighttoFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CanSeePlayerCompletedEventHandler(object sender, CanSeePlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanSeePlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanSeePlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void userLoginToDGSCompletedEventHandler(object sender, userLoginToDGSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userLoginToDGSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userLoginToDGSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void userHasRighttoFormCompletedEventHandler(object sender, userHasRighttoFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userHasRighttoFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userHasRighttoFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591